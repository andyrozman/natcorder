const NatCorder={$sharedInstance:[],NCSetAppToken:function(e){e=Pointer_stringify(e);return Module.NatML.NMLHubValidateAppToken(e,0,function(e){(sharedInstance[0]=e)||console.log("NatCorder Error: Failed to validate app token. You might not be able to create recorders")}),1},NCMediaRecorderFrameSize:function(e,r,t){e=sharedInstance[e-1].pixelBuffer;new Int32Array(HEAPU8.buffer,r,1)[0]=e.width,new Int32Array(HEAPU8.buffer,t,1)[0]=e.height},NCMediaRecorderCommitFrame:function(e,r,t){e=sharedInstance[e-1];const a=e.frameBufferContext,n=e.pixelBuffer;for(var o=4*n.width,c=0;c<n.height;c++){var i=new Uint8Array(HEAPU8.buffer,r+(n.height-c-1)*o,o);n.data.set(i,c*o)}a.putImageData(n,0,0)},NCMediaRecorderCommitSamples:function(e,r,t,a){e=sharedInstance[e-1];const n=e.audioContext;var e=e.audioStream,o=n.sampleRate,c=e.channelCount;const i=n.createBuffer(c,t/c,o);for(var d=new Float32Array(HEAPU8.buffer,r,t),s=0;s<i.numberOfChannels;s++){const u=i.getChannelData(s);for(var f=0;f<i.length;f++)u[f]=d[f*i.numberOfChannels+s]}c=n.createBufferSource();c.buffer=i,c.connect(e),c.start()},NCMediaRecorderFinishWriting:function(e,a,n){const r=sharedInstance[e-1],t=r.audioContext;r.recorder.ondataavailable=function(e){var e=new Blob([e.data],{type:"video/webm"}),r=URL.createObjectURL(e),e=(console.log("NatCorder: WEBMRecorder finished recording",e,"at URL",r),lengthBytesUTF8(r)+1),t=_malloc(e);stringToUTF8(r,t,e),Module.dynCall_vii(a,n,t),_free(t)},r.recorder.stop(),t&&t.close()},NCCreateMP4Recorder:function(e,r,t,a,n,o,c,i,d,s){new Int32Array(HEAPU8.buffer,s,1)[0]=0},NCCreateHEVCRecorder:function(e,r,t,a,n,o,c,i,d,s){new Int32Array(HEAPU8.buffer,s,1)[0]=0},NCCreateGIFRecorder:function(e,r,t,a,n){new Int32Array(HEAPU8.buffer,n,1)[0]=0},NCCreateWEBMRecorder:function(e,r,t,a,n,o,c,i,d){const s=document.createElement("canvas"),f=(s.width=r,s.height=t,s.getContext("2d"));var u=f.getImageData(0,0,r,t);const l=s.captureStream(a);var C=l.getVideoTracks()[0],r=(console.log("NatCorder: WEBMRecorder prepared video encoder at resolution",r,"x",t,"@",a,"Hz with average bitrate",c),0<n&&0<o);const h=r?new AudioContext({latencyHint:"interactive",sampleRate:n}):void 0,m=h&&h.createMediaStreamDestination({channelCount:o,channelCountMode:"explicit"});t=m&&m.stream.getAudioTracks()[0],a=r?[C,t]:[C],r&&console.log("NatCorder: WEBMRecorder prepared audio encoder at for",o,"channels at",n,"Hz"),t={mimeType:sharedInstance.MIME_TYPE,videoBitsPerSecond:c,audioBitsPerSecond:i};const g=new MediaRecorder(new MediaStream(a),t);g.start();C={recorder:g,frameBuffer:s,frameBufferContext:f,pixelBuffer:u,audioContext:h,audioStream:m};new Int32Array(HEAPU8.buffer,d,1)[0]=sharedInstance.push(C)}};autoAddDeps(NatCorder,"$sharedInstance"),mergeInto(LibraryManager.library,NatCorder);